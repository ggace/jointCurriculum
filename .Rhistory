xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
type="year"
tagName = "selenium"
if(!tagName %in% tagNames){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
type="year"
tagName = "tensorflow"
if(!tagName %in% tagNames){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
type="year"
tagName = "tensorflow"
if(!tagName %in% tagNames){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="year"
tagName = "tensorflow"
if(!tagName %in% tagNames && type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames && type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames || type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames || type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames | type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
if(!tagName %in% tagNames | type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
}
{}
type
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames | !type %in% types){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else if( !type %in% types){
print(sprintf("%s은 존재하지 않는 타입입니다.", type))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="year"
tagName = "tensorflow"
if(!tagName %in% tagNames){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
dev.off()
} else if( !type %in% types){
print(sprintf("%s은 존재하지 않는 타입입니다.", type))
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
print(tagNames)
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames){
print(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
print(tagNames)
print("이들 중 선택해주세요")
dev.off()
} else if( !type %in% types){
print(sprintf("%s은 존재하지 않는 타입입니다.", type))
print(types)
print("이들 중 선택해주세요")
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
cat
cat("
hello ")
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames){
cat(sprintf("%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.", tagName))
cat(tagNames)
cat("이들 중 선택해주세요")
dev.off()
} else if( !type %in% types){
cat(sprintf("%s은 존재하지 않는 타입입니다.", type))
cat(types)
cat("이들 중 선택해주세요")
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames){
cat(sprintf("\n%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.\n", tagName))
cat(tagNames)
cat("\n이들 중 선택해주세요\n")
dev.off()
} else if( !type %in% types){
cat(sprintf("\n%s은 존재하지 않는 타입입니다.\n", type))
cat(types)
cat("\n이들 중 선택해주세요\n")
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="years"
tagName = "tensorflow"
if(!tagName %in% tagNames){
cat(sprintf("\n%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.\n", tagName))
print(tagNames)
cat("이들 중 선택해주세요\n")
dev.off()
} else if( !type %in% types){
cat(sprintf("\n%s은 존재하지 않는 타입입니다.\n", type))
print(types)
cat("이들 중 선택해주세요\n")
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="month"
tagName = "python"
if(!tagName %in% tagNames){
cat(sprintf("\n%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.\n", tagName))
print(tagNames)
cat("이들 중 선택해주세요\n")
dev.off()
} else if( !type %in% types){
cat(sprintf("\n%s은 존재하지 않는 타입입니다.\n", type))
print(types)
cat("이들 중 선택해주세요\n")
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 그래프를 성공적으로 그렸습니다.", tagName))
}
tagNames = c("django", "flask", "jinja2", "jupyternotebook", "numpy", "pandas", "pip", "pygame", "pyinstaller", "pyqt", "pyserial", "python", "pytorch", "selenium", "sympy", "tensorflow")
types = c("year", "month")
type="month"
tagName = "python"
if(!tagName %in% tagNames){
cat(sprintf("\n%s는 존재하지 않는 태그이거나 csv파일로 변경하지 않은 파일입니다.\n", tagName))
print(tagNames)
cat("이들 중 선택해주세요\n")
dev.off()
} else if( !type %in% types){
cat(sprintf("\n%s은 존재하지 않는 타입입니다.\n", type))
print(types)
cat("이들 중 선택해주세요\n")
dev.off()
} else{
csv <- read.csv(sprintf("resources/%s/%sTagResource.csv", type, tagName))
if(type=="month"){
x <- as.Date(as.character(csv$year * 100 + 01), '%Y%m%d')
xlab = "달(월)"
}
else if(type == "year"){
x <- as.Date(as.character(csv$year * 10000 + 0101), '%Y%m%d')
xlab = "연도(년)"
}
y <- csv$count
plot(x, y,
pch=19,
col="blue",
xlab="연도(년)", ylab=sprintf("%s 태그 개수", tagName), main=sprintf("%s별 %s 태그 개수", xlab, tagName))
m <- lm(y~x)
abline(m, col="red")
print(sprintf("%s 태그에 관한 %s별 그래프를 성공적으로 그렸습니다.", tagName, xlab))
}
